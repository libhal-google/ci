name: 🧼 lint

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      library:
        required: true
        type: string
      source_dir:
        required: true
        type: string
      repo:
        required: true
        type: string

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          repository: ${{ inputs.repo }}

      - name: 📥 Install libclang-11-dev (for name style check)
        shell: bash
        run: sudo apt install libclang-11-dev

      - name: 📥 Install pip package 'clang' & 'pyyaml' (for ncc)
        shell: bash
        run: python3 -m pip install clang==11.1 pyyaml

      # Because inputs.library is required for workflow_calls, if this value is
      # blank it means that the workflow was ran in libhal and not
      # remotely.
      - name: 🌐 Downloading .naming.style from libhal
        run: wget https://raw.githubusercontent.com/libhal/libhal/main/.naming.style -O .naming.style

      - name: 🌐 Downloading .clang-format from libhal
        run: wget https://raw.githubusercontent.com/libhal/libhal/main/.clang-format -O .clang-format

      - name: 📥 Install NCC (Naming Convention Check)
        shell: bash
        run: git clone https://github.com/nithinn/ncc.git ncc

      - name: 📃 Naming Convention Check in Source Directory
        shell: bash
        if: always()
        run: |
              ./ncc/ncc.py --recurse --path ${{ inputs.source_dir }} \
              --exclude */third_party/* \
              --style .naming.style | tee ncc.stderr
              [ ! -s ncc.stderr ]

      - name: 📃 Naming Convention Check in Tests
        shell: bash
        if: always()
        run: |
              ./ncc/ncc.py --recurse --path ./tests/ \
              --exclude */third_party/* \
              --style .naming.style | tee ncc.stderr
              [ ! -s ncc.stderr ]

      - name: 🧹 Format Check Source Code
        uses: DoozyX/clang-format-lint-action@v0.15
        if: always()
        with:
          source: ${{ inputs.source_dir }}
          exclude: './third_party/*'
          extensions: 'hpp,cpp'
          clangFormatVersion: 15
          style: file

      - name: 🧹 Format Check Test Code
        uses: DoozyX/clang-format-lint-action@v0.15
        if: always()
        with:
          source: ./tests/
          exclude: './third_party/*'
          extensions: 'hpp,cpp'
          clangFormatVersion: 15
          style: file
